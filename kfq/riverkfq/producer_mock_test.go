// Code generated by mockery v2.43.0. DO NOT EDIT.

package riverkfq

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	xkafka "github.com/gojekfarm/xtools/xkafka"
)

// MockProducer is an autogenerated mock type for the Producer type
type MockProducer struct {
	mock.Mock
}

// Publish provides a mock function with given fields: ctx, msg
func (_m *MockProducer) Publish(ctx context.Context, msg *xkafka.Message) error {
	ret := _m.Called(ctx, msg)

	if len(ret) == 0 {
		panic("no return value specified for Publish")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *xkafka.Message) error); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockProducer creates a new instance of MockProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProducer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProducer {
	mock := &MockProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
